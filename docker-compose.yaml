services:
  python-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.python
    container_name: python-server
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.python
    command: celery -A tasks worker --loglevel=info
    container_name: celery
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network

  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Redis monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
      
  caddy:
    build:
      context: .
      dockerfile: docker/Dockerfile.caddy
    container_name: caddy
    ports:
      - "8001:80"
    depends_on:
      - python-server
    networks:
      - app-network

  jupyter:
    build:
      context: .
      dockerfile: docker/Dockerfile.jupyter
    container_name: jupyter-lab
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - jupyter-data:/home/jupyter/.local
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network

volumes:
  redis-data:
  jupyter-data:

networks:
  app-network:
    driver: bridge